/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cn.com.taiji.learn;


import antlr.taiji.DataLexer;
import antlr.taiji.ExprLexer;
import antlr.taiji.ExprParser;
import antlr.taiji.RowsParser;
import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.tree.ParseTree;
import org.antlr.v4.runtime.tree.ParseTreeListener;
import org.antlr.v4.runtime.tree.ParseTreeWalker;
import org.junit.jupiter.api.Test;

class AppTest {
    @Test void arrayInitTest()  {
        String source = "{1,2,3, 0, 5, 66}";
        antlr.taiji.ArrayInitLexer lexer = new antlr.taiji.ArrayInitLexer(CharStreams.fromString(source)); // create a buffer of tokens pulled from the lexer
        CommonTokenStream tokens = new CommonTokenStream(lexer); // create a parser that feeds off the tokens buffer
        antlr.taiji.ArrayInitParser parser = new antlr.taiji.ArrayInitParser(tokens);
        ParseTree tree = parser.init(); // begin parsing at init rule
        //System.out.println(tree.toStringTree(parser));
        ParseTreeWalker walker = new ParseTreeWalker();
        ShortToUnicodeString stus = new ShortToUnicodeString();
        walker.walk((ParseTreeListener) stus, tree);
        System.out.println((int)stus.getResult().charAt(3));
    }

    @Test void exprTest() {
        String source = "x = 3\n y=4 \n x+y \n";
        antlr.taiji.ExprLexer lexer = new ExprLexer(CharStreams.fromString(source));
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        antlr.taiji.ExprParser parser = new ExprParser(tokens);
        ParseTree tree = parser.prog();
        System.out.println(tree.toStringTree(parser));
        EvalVisitor visitor = new EvalVisitor();
        visitor.visit(tree);
    }

    @Test void rowTest() {
        String source = """
                parrr\tTerence Parr\t101
                tombu\tTom Burns\t020
                bke\tKevin Edgar\t008
                """;
        antlr.taiji.RowsLexer lexer = new antlr.taiji.RowsLexer(CharStreams.fromString(source));
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        int col = 2;
        antlr.taiji.RowsParser parser = new RowsParser(tokens, col);
        parser.setBuildParseTree(false);
        parser.file();
        System.out.println(parser.getResult());
    }

    @Test void dataTest() {
        String source = "2343531";
        antlr.taiji.DataLexer lexer = new DataLexer(CharStreams.fromString(source));
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        antlr.taiji.DataParser parser = new antlr.taiji.DataParser(tokens);
        ParseTree tree = parser.file();
        System.out.println(tree.toStringTree(parser));
    }
}
